<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on KID's Blog</title><link>https://blog.jyhsu.tw/categories/hugo/</link><description>Recent content in Hugo on KID's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Wed, 23 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.jyhsu.tw/categories/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>決定使用 GitHub Actions 將 Hugo 佈署到 GitHub Pages</title><link>https://blog.jyhsu.tw/p/%E6%B1%BA%E5%AE%9A%E4%BD%BF%E7%94%A8-github-actions-%E5%B0%87-hugo-%E4%BD%88%E7%BD%B2%E5%88%B0-github-pages/</link><pubDate>Wed, 23 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.jyhsu.tw/p/%E6%B1%BA%E5%AE%9A%E4%BD%BF%E7%94%A8-github-actions-%E5%B0%87-hugo-%E4%BD%88%E7%BD%B2%E5%88%B0-github-pages/</guid><description>&lt;h2 id="被放棄的方案">被放棄的方案
&lt;/h2>&lt;p>過去，在&lt;a class="link" href="https://zh.wikipedia.org/wiki/%E7%84%A1%E5%90%8D%E5%B0%8F%E7%AB%99" target="_blank" rel="noopener"
>無名小站&lt;/a>關閉之後，&lt;br>
主要是使用 &lt;a class="link" href="https://tw.wordpress.org/" target="_blank" rel="noopener"
>WordPress&lt;/a> 將網誌架設於自己租用的 VPS。&lt;br>
但堂堂 WordPress 只用來寫網誌好像有點太浪費？&lt;br>
而且 WordPress 的架設、更新、租用 VPS 等也都會是成本。&lt;/p>
&lt;h2 id="選擇-hugo-與-github-pages">選擇 Hugo 與 GitHub Pages
&lt;/h2>&lt;p>選擇替代方案時，考量的幾個主要條件：&lt;/p>
&lt;ul>
&lt;li>免費&lt;/li>
&lt;li>持續更新&lt;/li>
&lt;li>無須準備網站伺服器主機&lt;/li>
&lt;li>不用花太多時間維護&lt;/li>
&lt;li>使用 &lt;a class="link" href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener"
>Markdown&lt;/a> 撰寫&lt;/li>
&lt;/ul>
&lt;p>其中希望使用 Markdown 撰寫的原因，不外乎是平常的習慣，在 GitHub、GitLab、HackMD 等網站都是使用 Markdown。&lt;br>
比起 WordPress 那些強大的文章編輯工具，Markdown 這類簡單的文字格式反而更適合我們有條理的編輯與呈現內容。&lt;/p>
&lt;p>基於上述考量，認為不見得需要將網誌平台「架設」起來，&lt;br>
而將整個網誌本身轉換為靜態網頁，或許也是個方案。&lt;br>
並且若是靜態網站，就可以直接發佈到 &lt;a class="link" href="https://pages.github.com/" target="_blank" rel="noopener"
>GitHub Pages&lt;/a> 而無須自行架設。&lt;/p>
&lt;p>因此，決定往「靜態網站產生器」的方向尋找，&lt;br>
除了以前就知道但一直沒去接觸的 &lt;a class="link" href="https://jekyllrb.com/" target="_blank" rel="noopener"
>Jekyll&lt;/a> 之外，也得知了 &lt;a class="link" href="https://hexo.io/zh-tw/" target="_blank" rel="noopener"
>Hexo&lt;/a> 與 &lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>Hugo&lt;/a> 的存在。&lt;br>
為了從這些當中選出一款來使用，除了各自官方網站的介紹之外，也稍微看了些比較的文章：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://coreychen71.github.io/posts/2019-05/%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99%E7%94%A2%E7%94%9F%E5%99%A8%E4%BB%8B%E7%B4%B9/" target="_blank" rel="noopener"
>靜態網站產生器介紹&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://raychiutw.github.io/2019/Static-Site-Generator-Comparison/" target="_blank" rel="noopener"
>靜態網站產生器大比拚&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>最終選擇了 Hugo 作為網誌的靜態網站產生器&lt;/p>
&lt;h2 id="實際佈署流程">實際佈署流程
&lt;/h2>&lt;p>網路上的資料超級多了，這邊就不贅述太細節的事情&lt;/p>
&lt;ol>
&lt;li>
&lt;p>安裝 &lt;a class="link" href="https://git-scm.com/" target="_blank" rel="noopener"
>Git&lt;/a> 與 &lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>Hugo&lt;/a>&lt;br>
須對於指令操作與 Git 版本控制略為熟悉。&lt;br>
由於平常使用 Windows 作業系統，Hugo 的部份是依照&lt;a class="link" href="https://gohugo.io/getting-started/installing#binary-cross-platform" target="_blank" rel="noopener"
>安裝說明&lt;/a>直接從 &lt;a class="link" href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener"
>Hugo 的 GitHub 儲存庫的釋出頁面&lt;/a>下載&lt;br>
為了面對未知的未來，選擇安裝了標示了 &lt;code>extended&lt;/code> 字樣的擴充版本&lt;/p>
&lt;/li>
&lt;li>
&lt;p>建立 Hugo 專案，初始化 Git 儲存庫，並新增主題&lt;br>
Hugo 沒有預設主題，可以直接到 &lt;a class="link" href="https://themes.gohugo.io/" target="_blank" rel="noopener"
>Hugo Themes&lt;/a> 尋找&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new site HugoBlog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> HugoBlog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>將主題中 &lt;code>exampleSite&lt;/code> 資料夾的內容，複製到專案資料夾，並嘗試將 Hugo 執行起來&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo server -D
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在 &lt;code>config.yaml&lt;/code> 或 &lt;code>config.toml&lt;/code> 完成設定，並嘗試新增頁面或文章&lt;/p>
&lt;/li>
&lt;li>
&lt;p>為專案建立 &lt;code>.gitignore&lt;/code> 檔案，避免 Git 追蹤不必要的檔案&lt;br>
可以直接使用 &lt;a class="link" href="https://gitignore.io/?templates=hugo" target="_blank" rel="noopener"
>gitignore.io&lt;/a> 網站生成需要忽略的清單&lt;/p>
&lt;/li>
&lt;li>
&lt;p>建立 GitHub 儲存庫，將專案推送至主線&lt;/p>
&lt;/li>
&lt;li>
&lt;p>設定 GitHub Actions&lt;br>
Workflow 使用 &lt;a class="link" href="https://github.com/peaceiris/actions-hugo" target="_blank" rel="noopener"
>GitHub Actions for Hugo&lt;/a> 進行專案建置，&lt;br>
再利用 &lt;a class="link" href="https://github.com/peaceiris/actions-gh-pages" target="_blank" rel="noopener"
>GitHub Actions for GitHub Pages&lt;/a> 將建置後的檔案發佈至 GitHub Pages。&lt;br>
要注意的是，若須自訂域名，須在其中 &lt;a class="link" href="https://github.com/peaceiris/actions-gh-pages" target="_blank" rel="noopener"
>actions-gh-pages&lt;/a> 章節的 &lt;code>with&lt;/code> 指令 &lt;code>cname&lt;/code> 參數&lt;br>
具體可參考&lt;a class="link" href="https://github.com/jyhsu2000/HugoBlog/blob/master/.github/workflows/github-pages.yml" target="_blank" rel="noopener"
>本網誌的 Workflow&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>設定 GitHub Pages&lt;br>
&lt;code>Source&lt;/code> 指定為 &lt;code>gh-pages&lt;/code> 分支&lt;br>
若須自訂域名，設定的域名須與前一步驟相符&lt;/p>
&lt;/li>
&lt;li>
&lt;p>未來若新增或修改文章，推送至主線後，將自動觸發 GitHub Actions 將網站內容發佈&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="結語">結語
&lt;/h2>&lt;p>將網誌轉為使用 GitHub Actions 自動將 Hugo 佈署到 GitHub Pages 之後，&lt;br>
可有效省去維護主機與網站的時間成本與金錢成本。&lt;/p>
&lt;p>編輯文章方面，我習慣在電腦中使用 &lt;a class="link" href="https://code.visualstudio.com/" target="_blank" rel="noopener"
>VSCode&lt;/a> 編輯，並使用 Hugo 預覽，確認沒問題後，再推送至 GitHub 儲存庫。&lt;br>
但如果真要方便，也可以直接使用 GitHub 網頁版，或使用 &lt;a class="link" href="https://hackmd.io/" target="_blank" rel="noopener"
>HackMD&lt;/a>/&lt;a class="link" href="https://hedgedoc.org/" target="_blank" rel="noopener"
>HedgeDoc&lt;/a> 等平台連動 GitHub 儲存庫的方式進行編輯，&lt;br>
如此一來，甚至只須使用瀏覽器即可完成文章編修。&lt;/p>
&lt;h2 id="參考資料">參考資料
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://blog.puckwang.com/post/2020/use-github-actions-deploy-hugo/" target="_blank" rel="noopener"
>使用 Github Actions 來自動化部署 Hugo 到 Github Pages&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://gohugo.io/documentation/" target="_blank" rel="noopener"
>Hugo Documentation&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Hello, Hugo!</title><link>https://blog.jyhsu.tw/p/hello-hugo/</link><pubDate>Sat, 19 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.jyhsu.tw/p/hello-hugo/</guid><description>&lt;img src="https://blog.jyhsu.tw/p/hello-hugo/Logo_of_Hugo_the_static_website_generator.svg" alt="Featured image of post Hello, Hugo!" />&lt;p>在 Hugo 的第一篇文章&lt;br>
｡:.ﾟヽ(*´∀`)ﾉﾟ.:｡&lt;/p>
&lt;p>總之先試著&lt;br>
把之前在 WordPress 上的文章都搬過來了&lt;/p>
&lt;h2 id="參考資料">參考資料
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>Hugo: The world&amp;rsquo;s fastest framework for building websites&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/peaceiris/actions-hugo" target="_blank" rel="noopener"
>GitHub Actions for Hugo&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>