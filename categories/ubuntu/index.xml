<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ubuntu on KID's Blog</title><link>https://blog.kid7.club/categories/ubuntu/</link><description>Recent content in Ubuntu on KID's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Mon, 29 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.kid7.club/categories/ubuntu/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 SNMP 進行系統監控</title><link>https://blog.kid7.club/p/%E4%BD%BF%E7%94%A8-snmp-%E9%80%B2%E8%A1%8C%E7%B3%BB%E7%B5%B1%E7%9B%A3%E6%8E%A7/</link><pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/%E4%BD%BF%E7%94%A8-snmp-%E9%80%B2%E8%A1%8C%E7%B3%BB%E7%B5%B1%E7%9B%A3%E6%8E%A7/</guid><description>監控端 使用 Docker 版，以簡化佈署複雜度
https://github.com/setiseta/docker-librenms
調整 docker-compose.yml
修改 port
修改時區為 Asia/Taipei（兩處） 使用 docker-compose 佈署上述容器 進入修改帳號密碼（預設帳號/密碼：librenms） 根據需求於 HTTP server 設定反向代理 被監控端 安裝 snmpd 與 snmp（前者為服務本身，後者則包含 snmpwalk 等指令集）
1 sudo apt install snmpd snmp 從本機測試連線
1 snmpwalk -v 2c -c public localhost 修改 /etc/snmp/snmpd.conf
修改 agentAddress，使其能從遠端被訪問（存取控制則由防火牆直接管理） # 將 agentAddress udp:127.0.0.1:161 # 修改為 agentAddress udp:161 修改資料收集範圍（參考 IDC 設定方式） # 將 view systemonly included .</description></item><item><title>測試檔案讀寫速度</title><link>https://blog.kid7.club/p/%E6%B8%AC%E8%A9%A6%E6%AA%94%E6%A1%88%E8%AE%80%E5%AF%AB%E9%80%9F%E5%BA%A6/</link><pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/%E6%B8%AC%E8%A9%A6%E6%AA%94%E6%A1%88%E8%AE%80%E5%AF%AB%E9%80%9F%E5%BA%A6/</guid><description>可用於測試本機速度、NFS 速度等
請先以 cd 指令切換至欲測試的路徑
測試檔案寫入速度 1 time dd if=/dev/zero of=testfile bs=16k count=128k 測試檔案讀取速度 1 time dd if=testfile of=/dev/null bs=16k 參考資料 performance – Measure &amp;amp; benchmark the speed &amp;amp; latency of file access on a mounted NFS share – Server Fault</description></item><item><title>Ubuntu 帳號停用與重新啟用</title><link>https://blog.kid7.club/p/ubuntu-%E5%B8%B3%E8%99%9F%E5%81%9C%E7%94%A8%E8%88%87%E9%87%8D%E6%96%B0%E5%95%9F%E7%94%A8/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/ubuntu-%E5%B8%B3%E8%99%9F%E5%81%9C%E7%94%A8%E8%88%87%E9%87%8D%E6%96%B0%E5%95%9F%E7%94%A8/</guid><description>帳號停用 將帳號設定為昨天過期
1 sudo usermod -e $(date -d &amp;#34;yesterday&amp;#34; +&amp;#34;%Y-%m-%d&amp;#34;) &amp;lt;user&amp;gt; 確認帳號期限
1 sudo chage -l &amp;lt;user&amp;gt; 封存家目錄
1 2 3 4 cd /home sudo tar -I pigz -p -cvf &amp;lt;name of archive&amp;gt;.tar.gz &amp;lt;username&amp;gt; # 或以下 sudo tar czvfp &amp;lt;name of archive&amp;gt;.tar.gz &amp;lt;username&amp;gt; In addition, when doing a tar backup, it’s also good to add the following flags : p &amp;amp; (z/j)</description></item><item><title>使用 Telegram 接收 APC UPS 事件通知</title><link>https://blog.kid7.club/p/%E4%BD%BF%E7%94%A8-telegram-%E6%8E%A5%E6%94%B6-apc-ups-%E4%BA%8B%E4%BB%B6%E9%80%9A%E7%9F%A5/</link><pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/%E4%BD%BF%E7%94%A8-telegram-%E6%8E%A5%E6%94%B6-apc-ups-%E4%BA%8B%E4%BB%B6%E9%80%9A%E7%9F%A5/</guid><description>前置處理 已連接 APC UPS，並於機器中安裝 apcupsd 向 @BotFather 申請 Telegram Bot，並取得 token 安裝能夠透過 CLI 呼叫 Telegram Bot API 的工具
（以下以 TelegramBotCli 為例） 設定流程 確認已完成 apcupsd 的設定，並能透過已下指令順利存取 UPS 狀態
apcaccess status 在 Terminal 開著的情況下，測試 UPS 能否順利偵測事件並發送通知
（拔插頭看有沒有看到訊息之類的）
進入 /etc/apcupsd，可以看到一些檔案
apccontrol 是整個核心部分，有興趣可以看看，但官方警告不要修改這個
於是我們要修改的是根據不同事件各自獨立的處理流程檔案
開啟事件處理流程檔案，如 offbattery、onbattery、commfailure、commok 等我們希望收到通知的事件，預設應該會是類似以下內容
主要是在事件發生時，先整理需要的訊息，並以管線轉送給設定好的通知程序，進行通知發送的動作
其中第 16 行管線後的部分，即為我們希望修改的訊息轉送動作
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #!</description></item></channel></rss>