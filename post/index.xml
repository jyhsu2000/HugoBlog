<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on KID's Blog</title><link>https://blog.kid7.club/post/</link><description>Recent content in Posts on KID's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sat, 19 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.kid7.club/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Hello, world!</title><link>https://blog.kid7.club/p/hello-world/</link><pubDate>Sat, 19 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/hello-world/</guid><description>在 Hugo 的第一篇文章
｡:.ﾟヽ(*´∀`)ﾉﾟ.:｡
接下來會試著
把之前在 WordPress 上的文章都搬過來</description></item><item><title>PhpStorm 使用 PHP Code Sniffier</title><link>https://blog.kid7.club/p/phpstorm-%E4%BD%BF%E7%94%A8-php-code-sniffier/</link><pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/phpstorm-%E4%BD%BF%E7%94%A8-php-code-sniffier/</guid><description>安裝 安裝 PHP_CodeSniffer （推薦使用 Composer 進行安裝）
https://github.com/squizlabs/PHP_CodeSniffer
1 composer global require &amp;#34;squizlabs/php_codesniffer=*&amp;#34; 確認指令可用
1 2 phpcs --version phpcbf --version 使用 phpcs 檢查錯誤
phpcs &amp;lt;檔案/資料夾&amp;gt; 自動修正錯誤
1 phpcbf &amp;lt;檔案/資料夾&amp;gt; 自訂驗證標準 使用 phpcs 時，可自訂驗證使用標準（如：PSR-2，或自己撰寫的定義檔等） 若未指定，將預設嘗試抓取 phpcs.xml 作為標準
1 2 phpcs --standard=PSR2 phpcs --standard=/path/to/custom_ruleset.xml 於 PhpStorm 使用 phpcs 設定 Code Sniffier
Settings → Languages &amp;amp; Frameworks → PHP → Quality Tools → Code Sniffier Configuration 設定為 Local，點擊右側「…」</description></item><item><title>Anaconda 安裝筆記</title><link>https://blog.kid7.club/p/anaconda-%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98/</link><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/anaconda-%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98/</guid><description>流程 下載 Anaconda
https://www.anaconda.com/distribution/
1 wget https://repo.anaconda.com/archive/Anaconda3-2019.07-Linux-x86_64.sh 安裝 Anaconda
安裝路徑：/opt/anaconda
不使用 Conda init 初始化
1 sudo bash ./Anaconda3-2019.07-Linux-x86_64.sh 建立 Anaconda 使用者
1 sudo useradd anaconda 設定資料夾權限
1 2 3 sudo chown -R anaconda:anaconda /opt/anaconda sudo chmod -R go-w /opt/anaconda sudo chmod -R go+rX /opt/anaconda 設定 PATH
（給使用者：）在 /etc/environment 的 PATH 新增 /opt/anaconda/bin</description></item><item><title>Ubuntu 16.04/CUDA 10.0 安裝筆記</title><link>https://blog.kid7.club/p/ubuntu-16.04-cuda-10.0-%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98/</link><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/ubuntu-16.04-cuda-10.0-%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98/</guid><description>流程 安裝 NVIDIA 顯卡驅動與相關套件
https://www.tensorflow.org/install/gpu#ubuntu_1604_cuda_10
重開機
測試
1 2 nvidia-smi nvcc -V 編譯測試工具，並進行測試
1 2 3 4 5 cd /usr/local/cuda-10.0/samples sudo make cd bin/x86_64/linux/release sudo ./deviceQuery sudo ./bandwidthTest 安裝 tensorflow-gpu
1 sudo pip3 install tensorflow-gpu 測試 tensorflow 能否抓到 GPU
1 python3 1 2 3 4 5 6 7 from tensorflow.</description></item><item><title>在 Windows 的 XAMPP 安裝 Imagick 擴充套件</title><link>https://blog.kid7.club/p/%E5%9C%A8-windows-%E7%9A%84-xampp-%E5%AE%89%E8%A3%9D-imagick-%E6%93%B4%E5%85%85%E5%A5%97%E4%BB%B6/</link><pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/%E5%9C%A8-windows-%E7%9A%84-xampp-%E5%AE%89%E8%A3%9D-imagick-%E6%93%B4%E5%85%85%E5%A5%97%E4%BB%B6/</guid><description> 檢視 XAMPP 的 phpinfo()，確認以下項目 Architecture：x86 / x64 Thread Safety：enabled / disabled Compiler：如 MSVC15 (Visual C++ 2017) 到 PECL Deps 查看對應以上 Architecture 與 Compiler 對應的 ImageMagick 版本 如 ImageMagick-7.0.7-11-vc15-x64.zip 則為 7.0.7 根據以下文章進行安裝，唯各步驟須注意使用上述版本 How to install and enable the Imagick extension in XAMPP for Windows 若第一步驟找不到對應版本的 ImageMagick，可到這裡下載</description></item><item><title>XAMPP 安裝 PHP_CodeSniffer</title><link>https://blog.kid7.club/p/xampp-%E5%AE%89%E8%A3%9D-php_codesniffer/</link><pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/xampp-%E5%AE%89%E8%A3%9D-php_codesniffer/</guid><description>2019-10-06 更新：
此篇為舊筆記
現已不建議使用 pear 安裝，建議直接使用 Composer 安裝全域套件
1 composer global require &amp;#34;squizlabs/php_codesniffer=*&amp;#34; 使用 XAMPP 時，
若需安裝 PHP_CodeSniffer，
一般會使用 PEAR 的安裝方案
1 pear install PHP_CodeSniffer 但很可能出現以下錯誤
Cannot use result of built-in function in write context in D:\xampp\php\pear\Archive\Tar.php on line 639 解決方案：
進入檔案，將該行由 1 $v_att_list = &amp;amp; func_get_args(); 改為
1 $v_att_list = func_get_args(); 重新安裝 Archive_Tar 1 pear install Archive_Tar 重新安裝 PHP_CodeSniffer pear install PHP_CodeSniffer</description></item><item><title>Spigot 使用 Flyway 踩雷分享</title><link>https://blog.kid7.club/p/spigot-%E4%BD%BF%E7%94%A8-flyway-%E8%B8%A9%E9%9B%B7%E5%88%86%E4%BA%AB/</link><pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate><guid>https://blog.kid7.club/p/spigot-%E4%BD%BF%E7%94%A8-flyway-%E8%B8%A9%E9%9B%B7%E5%88%86%E4%BA%AB/</guid><description>Flyway 是一款資料庫版本控管的解決方案，
方便接上不同類型的資料庫，也能夠輕易實作遷移機制（Migration）
自己撰寫的 Spigot 插件正好需要連結資料庫
原本苦惱於遷移機制的實作，直到發現 Flyway 具備遷移機制，同時又具有 Java API 可以使用
就決定是這款了！
這篇主要是要記錄自己踩雷的解決方法，就不推坑傳教了
有興趣自己去 Google
在這次撰寫的 Spigot 插件中，打算暫且先以 SQLite 作為資料庫
於是先安裝了 Flyway 與 SQLite-JDBC
compile 'org.flywaydb:flyway-core:5.2.4' compile 'org.xerial:sqlite-jdbc:3.23.1' 設定 Flyway
1 2 3 4 5 String configFolder = this.plugin.getDataFolder().getAbsolutePath(); String dbUrl = &amp;#34;jdbc:sqlite:&amp;#34; + configFolder + &amp;#34;/database.db&amp;#34;; Flyway flyway = Flyway.configure().dataSource(dbUrl, null, null).load(); flyway.migrate(); 然後他就爆炸了ლ(ﾟдﾟლ)
遇到的第一個問題：
FlywayException: Unable to instantiate class org.flywaydb.core.internal.logging.slf4j.Slf4jLogCreator 解決方案：自行指令 LogCreator</description></item></channel></rss>