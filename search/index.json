[{"content":"在 Hugo 的第一篇文章\n｡:.ﾟヽ(*´∀`)ﾉﾟ.:｡\n接下來會試著\n把之前在 WordPress 上的文章都搬過來\n","date":"2021-06-19T00:00:00Z","permalink":"https://blog.kid7.club/p/hello-world/","title":"Hello, world!"},{"content":"Flyway 是一款資料庫版本控管的解決方案，\n方便接上不同類型的資料庫，也能夠輕易實作遷移機制（Migration）\n自己撰寫的 Spigot 插件正好需要連結資料庫\n原本苦惱於遷移機制的實作，直到發現 Flyway 具備遷移機制，同時又具有 Java API 可以使用\n就決定是這款了！\n這篇主要是要記錄自己踩雷的解決方法，就不推坑傳教了\n有興趣自己去 Google\n 在這次撰寫的 Spigot 插件中，打算暫且先以 SQLite 作為資料庫\n於是先安裝了 Flyway 與 SQLite-JDBC\ncompile 'org.flywaydb:flyway-core:5.2.4' compile 'org.xerial:sqlite-jdbc:3.23.1' 設定 Flyway\n1 2 3 4 5  String configFolder = this.plugin.getDataFolder().getAbsolutePath(); String dbUrl = \u0026#34;jdbc:sqlite:\u0026#34; + configFolder + \u0026#34;/database.db\u0026#34;; Flyway flyway = Flyway.configure().dataSource(dbUrl, null, null).load(); flyway.migrate();   然後他就爆炸了ლ(ﾟдﾟლ)\n 遇到的第一個問題：\nFlywayException: Unable to instantiate class org.flywaydb.core.internal.logging.slf4j.Slf4jLogCreator 解決方案：自行指令 LogCreator\nhttps://github.com/flyway/flyway/issues/506\n1  LogFactory.setLogCreator(new Slf4jLogCreator());   遇到的第二個問題：\nUnable to resolve location classpath:db/migration 解決方案：自行指定 ClassLoader\n1  Flyway flyway = Flyway.configure(getClass().getClassLoader()).dataSource(dbUrl, null, null).load();    就這樣，花了半天解決這些問題\n還不錯用，就是資料難找了點…\n","date":"2018-12-18T00:00:00Z","permalink":"https://blog.kid7.club/p/spigot-%E4%BD%BF%E7%94%A8-flyway-%E8%B8%A9%E9%9B%B7%E5%88%86%E4%BA%AB/","title":"Spigot 使用 Flyway 踩雷分享"}]