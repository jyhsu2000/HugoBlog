<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>資料處理 on KID's Blog</title><link>https://blog.jyhsu.tw/tags/%E8%B3%87%E6%96%99%E8%99%95%E7%90%86/</link><description>Recent content in 資料處理 on KID's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Thu, 04 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.jyhsu.tw/tags/%E8%B3%87%E6%96%99%E8%99%95%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>時間的四捨五入（R、Python Pandas）</title><link>https://blog.jyhsu.tw/p/%E6%99%82%E9%96%93%E7%9A%84%E5%9B%9B%E6%8D%A8%E4%BA%94%E5%85%A5-r-python-pandas/</link><pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.jyhsu.tw/p/%E6%99%82%E9%96%93%E7%9A%84%E5%9B%9B%E6%8D%A8%E4%BA%94%E5%85%A5-r-python-pandas/</guid><description>資料處理時，常需要將時間轉換為接近的整點，
如：9:47 轉換為 10:00；14:03 轉換為 14:00
或是以 15 分鐘為區間，
如：9:47 轉換為 9:45、5:23 轉換為 5:30
以下分別介紹 R 與 Python 兩種語言的處理方式
R 使用 lubridate 套件中的 round_date（四捨五入）、floor_date（向下取整）、ceiling_date（向上取整）
三者皆可依照需求指定時間精度，以下範例分別以 5 分鐘、10 分鐘、1 小時取接近值
1 2 3 4 5 6 7 8 9 10 11 12 13 x &amp;lt;- as.POSIXct(&amp;#34;2017-10-11 09:49:03&amp;#34;) lubridate::round_date(x, &amp;#34;5 minute&amp;#34;) # 2017-10-11 09:50:00 lubridate::round_date(x, &amp;#34;10 minute&amp;#34;) # 2017-10-11 09:50:00 lubridate::round_date(x, &amp;#34;hour&amp;#34;) # 2017-10-11 10:00:00 lubridate::floor_date(x, &amp;#34;5 minute&amp;#34;) # 2017-10-11 09:45:00 lubridate::floor_date(x, &amp;#34;10 minute&amp;#34;) # 2017-10-11 09:40:00 lubridate::floor_date(x, &amp;#34;hour&amp;#34;) # 2017-10-11 10:00:00 lubridate::ceiling_date(x, &amp;#34;5 minute&amp;#34;) # 2017-10-11 09:50:00 lubridate::ceiling_date(x, &amp;#34;10 minute&amp;#34;) # 2017-10-11 09:50:00 lubridate::ceiling_date(x, &amp;#34;hour&amp;#34;) # 2017-10-11 10:00:00 Python Python 本身較難處理這類情況，因此會使用 Pandas 套件中 pandas.</description></item></channel></rss>